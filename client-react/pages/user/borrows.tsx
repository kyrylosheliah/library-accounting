import Head from "next/head";
import {
  createStyles,
  Container,
  rem,
  Paper,
  Text,
  useMantineTheme,
  Tabs,
  Title,
  Stack,
  ThemeIcon,
  Button,
  Center,
  Timeline,
} from "@mantine/core";
import Link from "next/link";
import {
  IconChevronLeft,
  IconReceipt,
  IconReceiptRefund,
} from "@tabler/icons-react";
import { useBorrows } from "root/hooks/useBorrow";
import { BorrowInvoice } from "root/components/BorrowInvoice";
import { PDFModalButton } from "root/components/Buttons/PDFModalButton";
import { ReturnInvoice } from "root/components/ReturnInvoice";
import { LoadingWrapper } from "root/components/LoadingWrapper";

const useStyles = createStyles((theme) => ({
  block: {
    border: `${rem(1)} solid ${
      theme.colorScheme === "dark" ? theme.colors.dark[6] : theme.colors.gray[4]
    }`,
  },

  padded: {
    marginTop: rem(24),
    padding: rem(24),
  },
}));

export default function UserDebt() {
  const theme = useMantineTheme();
  const { classes, cx } = useStyles();

  const {
    borrowsReady,
    borrowsSuccess,
    borrows,
    returnsReady,
    returnsSuccess,
    returns,
  } = useBorrows();

  const emptyElement = (
    <Text ml={rem(4)} size="sm" color="dimmed">
      {"<Пусто>"}
    </Text>
  );

  const borrowItems = (
    <Timeline active={borrows.length} bulletSize={rem(25)} lineWidth={rem(2)}>
      {borrows.map((borrow, index) => (
        <Timeline.Item
          key={`borrow_${index}`}
          bullet={<IconReceipt size="75%" />}
          title={`Зареєстровано кошик запозичення №${borrow.BorrowId}`}
        >
          {borrow.Cart
            ? borrow.Cart.length
              ? borrow.Cart.map((borrowItem, borrowItemIndex) => (
                  <Text
                    ml={rem(4)}
                    size="sm"
                    color="dimmed"
                    key={`borrow_${index}_item_${borrowItemIndex}`}
                  >
                    {borrowItem.Book
                      ? `Запозичення №${borrowItem.BorrowItemId}: ${
                          borrowItem.Book.Title
                        } (${
                          borrowItem.Book.Year
                        } р.) до ${borrowItem.ExpirationDate.toLocaleString()}`
                      : `Запозичення №${borrowItem.BorrowItemId} невідомої книги`}
                  </Text>
                ))
              : emptyElement
            : emptyElement}
          <PDFModalButton
            text="Показати чек"
            DocumentComponent={BorrowInvoice}
            parameter={borrow}
          />
          <Text size="xs" mt={4}>
            {borrow.BorrowDate.toLocaleString()}
          </Text>
        </Timeline.Item>
      ))}
    </Timeline>
  );

  const returnItems = (
    <Timeline active={returns.length} bulletSize={rem(25)} lineWidth={rem(2)}>
      {returns.map((returnal, index) => (
        <Timeline.Item
          key={`return_${index}`}
          bullet={<IconReceiptRefund size="75%" />}
          title={`Зареєстровано кошик поверненя №${returnal.ReturnId}`}
        >
          {returnal.Cart
            ? returnal.Cart.length
              ? returnal.Cart.map((returnItem, returnItemIndex) => (
                  <Text
                    ml={rem(4)}
                    size="sm"
                    color="dimmed"
                    key={`return_${index}_item_${returnItemIndex}`}
                  >
                    {returnItem.Book
                      ? `Повернення №${returnItem.ReturnItemId}: ${
                          returnItem.Book.Title
                        } (${returnItem.Book.Year} р.)${
                          returnItem.Book.Isbn
                            ? `, ISBN ${returnItem.Book.Isbn}`
                            : ""
                        }`
                      : `Повернення №${returnItem.ReturnItemId} невідомої книги`}
                  </Text>
                ))
              : emptyElement
            : emptyElement}
          <PDFModalButton
            text="Показати чек"
            DocumentComponent={ReturnInvoice}
            parameter={returnal}
          />
          <Text size="xs" mt={4}>
            {returnal.ReturnDate.toLocaleString()}
          </Text>
        </Timeline.Item>
      ))}
    </Timeline>
  );

  return (
    <>
      <Head>
        <title>Обліковий запис</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Container size="sm" mt={rem(30)}>
        <Center mb="xl">
          <Link href="/user">
            <Button variant="subtle" pl="xs" pr="lg">
              <IconChevronLeft />
              Назад
            </Button>
          </Link>
        </Center>
        <Stack align="center">
          <Title align="center">
            <ThemeIcon size={34} variant="default" radius="md">
              <IconReceipt color={theme.colors["blue"][6]} />
            </ThemeIcon>
            &nbsp;&nbsp;Запозичення та Повернення
          </Title>
          <Text>Список усіх ваших взаємодій з бібліотекою</Text>
        </Stack>

        <Tabs mt="xl" defaultValue="Запозичення">
          <Center>
            <Tabs.List position="center">
              <Tabs.Tab value={"Запозичення"} icon={<IconReceipt />}>
                Запозичення
              </Tabs.Tab>
              <Tabs.Tab value={"Повернення"} icon={<IconReceiptRefund />}>
                Повернення
              </Tabs.Tab>
            </Tabs.List>
          </Center>
          <Tabs.Panel value={"Запозичення"}>
            <Paper className={cx(classes.block, classes.padded)}>
              <LoadingWrapper
                success={borrowsSuccess}
                ready={borrowsReady}
                item={borrowItems}
                length={borrows.length}
              />
            </Paper>
          </Tabs.Panel>
          <Tabs.Panel value={"Повернення"}>
            <Paper className={cx(classes.block, classes.padded)}>
              <LoadingWrapper
                success={returnsSuccess}
                ready={returnsReady}
                item={returnItems}
                length={returns.length}
              />
            </Paper>
          </Tabs.Panel>
        </Tabs>
      </Container>
    </>
  );
}
