import Head from "next/head";
import {
  createStyles,
  Container,
  rem,
  Paper,
  Text,
  useMantineTheme,
  Title,
  Stack,
  Button,
  ThemeIcon,
  Flex,
  Group,
  SimpleGrid,
  Center,
  Card,
} from "@mantine/core";
import Image from "next/image";
import Link from "next/link";
import {
  IconChevronLeft,
  IconHourglassHigh,
  IconHourglassOff,
  IconReceipt,
} from "@tabler/icons-react";
import { useDebts } from "root/hooks/useDebts";
import { LabeledField } from "root/components/LabeledField";
import { LoadingListWrapper } from "root/components/LoadingWrapper";

const useStyles = createStyles((theme) => ({
  block: {
    border: `${rem(1)} solid ${
      theme.colorScheme === "dark" ? theme.colors.dark[6] : theme.colors.gray[4]
    }`,
  },

  padded: {
    padding: rem(24),
  },
}));

export default function UserDebt() {
  const theme = useMantineTheme();
  const { classes, cx } = useStyles();

  const { ready, success, debts } = useDebts();

  const items = debts.map((debt, index) => (
    <div key={index}>
      <Group mt="xl" mb="xs">
        {Date.now() >= debt.ExpirationDate.valueOf()
          ? [
              <ThemeIcon variant="default" size={rem(36)}>
                <IconHourglassOff color={theme.colors["red"][6]} />
              </ThemeIcon>,
              <Text fw={700} color={theme.colors["red"][6]}>
                Прострочено (кошик {debt.BorrowItemId}
                {debt.Book && `, книга ${debt.Book?.Id}`})
              </Text>,
            ]
          : [
              <ThemeIcon variant="default" size={rem(36)}>
                <IconReceipt color={theme.colors[theme.primaryColor][6]} />
              </ThemeIcon>,
              <Text>
                Запозичено (кошик {debt.BorrowItemId}
                {debt.Book && `, книга ${debt.Book?.Id}`})
              </Text>,
            ]}
      </Group>
      <Paper className={cx(classes.block, classes.padded)}>
        <SimpleGrid cols={2}>
          <LabeledField
            label="Видано"
            value={debt.BorrowDate.toLocaleString()}
          />
          <LabeledField
            label="Спливає"
            value={debt.ExpirationDate.toLocaleString()}
          />
        </SimpleGrid>
        {debt.Book ? (
          <SimpleGrid m={0} cols={2}>
            {/* breakpoints={[{ maxWidth: "sm", cols: 1 }]} */}
            <Card
              className={classes.block}
              maw={rem(630)}
              mih={rem(300)}
              pos="relative"
            >
              <Image
                color="gray"
                src={`/book/${debt.Book.Id}_cover.jpg`}
                alt={`${debt.Book.Id}:${debt.Book.Title}`}
                fill={true}
                style={{ objectFit: "cover" }}
              />
            </Card>
            <Flex direction="column">
              <LabeledField label="Назва" value={debt.Book.Title} />
              {debt.BookCategory ? (
                <LabeledField label="Категорія" value={debt.BookCategory} />
              ) : (
                <LabeledField
                  label="Код Категорії"
                  value={debt.Book.CategoryId}
                />
              )}
              <LabeledField label="Автор" value={debt.Book.Author} />
              <LabeledField label="Рік видання" value={debt.Book.Year} />
            </Flex>
          </SimpleGrid>
        ) : (
          "Невідома книга"
        )}
      </Paper>
    </div>
  ));

  return (
    <>
      <Head>
        <title>Обліковий запис</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container size="sm" mt={rem(30)}>
        <Center mb="xl">
          <Link href="/user">
            <Button variant="subtle" pl="xs" pr="lg">
              <IconChevronLeft />
              Назад
            </Button>
          </Link>
        </Center>
        <Stack align="center">
          <Title align="center">
            <ThemeIcon size={34} variant="default" radius="md">
              <IconHourglassHigh color={theme.colors["red"][6]} />
            </ThemeIcon>
            &nbsp;&nbsp;Борг по запозиченнях
          </Title>
          <Text align="center">
            Друковані видання, які зареєстровано у вашому володінні
          </Text>
        </Stack>
        <LoadingListWrapper success={success} ready={ready} items={items} />
      </Container>
    </>
  );
}
