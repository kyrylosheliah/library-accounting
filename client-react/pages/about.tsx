import Head from "next/head";
import {
  Container,
  Title,
  Accordion,
  createStyles,
  rem,
  Text,
  Button,
  Flex,
} from "@mantine/core";
import {
  IconArrowMoveDown,
  IconBrandMantine,
  IconBrandNextjs,
  IconBrandReact,
} from "@tabler/icons-react";
import { useRef } from "react";
import { ImageButton } from "root/components/Buttons/ImageButton";

const useStyles = createStyles((theme) => ({
  wrapper: {
    paddingTop: `calc(${theme.spacing.xl} * 2)`,
    paddingBottom: `calc(${theme.spacing.xl} * 2)`,
    minHeight: 650,
  },

  title: {
    marginBottom: `calc(${theme.spacing.xl} * 1.5)`,
  },

  item: {
    border: `${rem(1)} solid ${
      theme.colorScheme === "dark" ? theme.colors.dark[6] : theme.colors.gray[4]
    }`,
    backgroundColor:
      theme.colorScheme === "dark"
        ? theme.colors.dark[7]
        : theme.colors.gray[0],
    "&[data-active]": {
      backgroundColor:
        theme.colorScheme === "dark" ? theme.colors.dark[9] : theme.white,
    },
  },

  gradient: {
    backgroundImage: `radial-gradient(${
      theme.colors[theme.primaryColor][6]
    } 0%, ${theme.colors[theme.primaryColor][5]} 100%)`,
  },
}));

export default function About() {
  const { classes } = useStyles();
  const pageEndRef = useRef<HTMLDivElement>(null);

  return (
    <>
      <Head>
        <title>Про нас</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Container mt="md" size="sm" className={classes.wrapper}>
        <Title align="center" className={classes.title}>
          Хто ми?
        </Title>
        <Text>
          Наша платформа робить доступним перегляд каталогу цієї бібліотеки
          онлайн.
          <br />
          <br />
          Ви можете зареєструвати у нас обліковий запис, до якого у фізичному
          закладі ми матимемо змогу прив&apos;язати запозичені вами екземпляри
          будь-яких наявних у нас друкованих видань.
          <br />
          <br />
          Це дозволить вам переглядати ваші чеки з приводу подій запозичення та
          повернення книжок, які проходили через вас. Але найголовніше у цій
          функціональності - це перегляд ваших боргів по всіх запозиченнях, що
          облегшує інформування та взаємодію нас з вами.
        </Text>

        <Title order={2} mt={rem(60)} align="center" className={classes.title}>
          Часті запитання
        </Title>

        <Accordion
          variant="contained"
          chevronPosition="left"
          disableChevronRotation
        >
          <Accordion.Item className={classes.item} value="payment">
            <Accordion.Control>Як з вами зв&apos;язатися?</Accordion.Control>
            <Accordion.Panel>
              <Flex justify="space-around" wrap="wrap" align="center">
                <Text>Зв&apos;язок за нашими контактами у футері сайту.</Text>
                <Button
                  my="sm"
                  compact
                  onClick={() =>
                    pageEndRef.current?.scrollIntoView({ behavior: "smooth" })
                  }
                >
                  &nbsp;&nbsp;Вниз
                  <IconArrowMoveDown />
                </Button>
              </Flex>
            </Accordion.Panel>
          </Accordion.Item>

          <Accordion.Item className={classes.item} value="reset-password">
            <Accordion.Control>
              Як я можу змінити свій пароль?
            </Accordion.Control>
            <Accordion.Panel>
              Ви можете скористатися відповідною формою на сторінці налаштувань
              вашого облікового запису. Ви можете знайти цей пункт натиснувши
              іконку користувача праворуч у шапці.
            </Accordion.Panel>
          </Accordion.Item>

          <Accordion.Item className={classes.item} value="another-account">
            <Accordion.Control>
              Чи можу я створити більше, ніж один акаунт?
            </Accordion.Control>
            <Accordion.Panel>
              Так, ви можете. Але операції по запозиченню та поверненню друку
              проводить фізично відповідальний за них співробітник бібліотеки,
              до обов&apos;язків якого входить посвідчення ваших даних.
            </Accordion.Panel>
          </Accordion.Item>

          <Accordion.Item className={classes.item} value="newsletter">
            <Accordion.Control>
              Як я можу підписатися на щомісячну поштову розсилку?
            </Accordion.Control>
            <Accordion.Panel>
              Ви не можете. На даний момент сервер бібліотеки не передбачає
              такої послуги.
            </Accordion.Panel>
          </Accordion.Item>

          <Accordion.Item className={classes.item} value="credit-card">
            <Accordion.Control>
              Чи ви зберігаєте інформацію про мене безпечним чином?
            </Accordion.Control>
            <Accordion.Panel>
              Особа може отримати доступ до перегляду користувацьких даних
              облікового запису лише після введення правильних даних облікового
              запису із наступним створенням вашого відбитка у Cookie браузера.
              <br />
              <br />
              Відбиток припиняє свою чинність у питанні виконання операцій на
              сайті від вашої особи за умови, якщо користувач не знаходиться на
              будь-якій сторінці сайту упродовж 30 хвилин.
              <br />
              <br />
              За умови витоку цього відбитка з нього можна зчитати лише ваш
              ідентификатор користувача та наявну роль в системі.
            </Accordion.Panel>
          </Accordion.Item>
        </Accordion>

        <Flex
          mt={rem(60)}
          gap="xl"
          wrap="wrap"
          direction="row"
          justify="center"
        >
          <Title order={3}>Створено за допомоги</Title>
          <Flex gap="xl" wrap="wrap" direction="row" justify="center">
            <ImageButton
              title="Next.JS"
              backcolor="black"
              link="https://nextjs.org/"
              image={
                <IconBrandNextjs color="white" stroke={1.25} size={rem(120)} />
              }
            />
            <ImageButton
              title="React"
              backcolor="#222222"
              link="https://react.dev/"
              image={
                <IconBrandReact color="#61DBFB" stroke={1.25} size={rem(120)} />
              }
            />
            <ImageButton
              title="Mantine UI"
              backcolor="#339af0"
              link="https://mantine.dev/"
              image={
                <IconBrandMantine color="white" stroke={1.25} size={rem(120)} />
              }
            />
            <ImageButton
              title="Entity Framework Core"
              backcolor="#68217a"
              link="https://learn.microsoft.com/en-us/ef/core/"
              image={
                <Text color="white" lh={1} fw={700} size={rem(44)}>
                  EF
                  <br />
                  Core
                </Text>
              }
            />
          </Flex>
        </Flex>
      </Container>

      <div ref={pageEndRef}></div>
    </>
  );
}
