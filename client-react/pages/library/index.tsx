import Head from "next/head";
import {
  TextInput,
  ActionIcon,
  useMantineTheme,
  Container,
  Title,
  Text,
  Pagination,
  Grid,
  rem,
  Flex,
} from "@mantine/core";
import {
  IconSearch,
  IconArrowRight,
  IconSortAscendingLetters,
  IconSortDescendingLetters,
} from "@tabler/icons-react";
import { Carousel } from "@mantine/carousel";
import { CheckboxButton } from "root/components/Buttons/CheckboxButton";
import { useBookSearch } from "root/hooks/useBookSearch";
import { LibrarySearchItem } from "root/components/Buttons/LibrarySearchItem";
import { BookSearchFilterPurpose } from "root/models/Book";

export default function Library() {
  const theme = useMantineTheme();
  const {
    categories,
    searchData,
    searchPageCount,
    page,
    ascending,
    queryFields,
    setOrderByColumn,
    setQuery,
    getSearch,
  } = useBookSearch();

  return (
    <>
      <Head>
        <title>Бібліотека</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container size="lg" py="xl">
        <Title ta="center" mt="sm">
          Пошук по каталогу
        </Title>

        <Text c="dimmed" ta="center" my="md">
          Оберіть категорію
        </Text>

        <Carousel withControls={false} dragFree slideSize={160} slideGap="sm">
          {categories.map((item, index) => (
            <Carousel.Slide key={item.Category}>
              <CheckboxButton
                checked={index === queryFields.categoryChecked}
                title={item.Category}
                onChange={() => queryFields.setCategoryChecked(index)}
              />
            </Carousel.Slide>
          ))}
        </Carousel>

        <Text c="dimmed" ta="center" my="md">
          Оберіть критерій
        </Text>
        <Carousel withControls={false} dragFree slideSize={160} slideGap="sm">
          {BookSearchFilterPurpose.map((item, index) => (
            <Carousel.Slide key={item.description}>
              <CheckboxButton
                checked={index === queryFields.keyChecked}
                title={item.description}
                onChange={() => {
                  queryFields.setKeyChecked(index ? index : 0);
                  setOrderByColumn(BookSearchFilterPurpose[index].key || "Id");
                }}
              />
            </Carousel.Slide>
          ))}
        </Carousel>
      </Container>

      <Container size="xs">
        <TextInput
          disabled={queryFields.keyChecked === 0}
          icon={<IconSearch size="1.1rem" />}
          size="md"
          radius="xl"
          value={queryFields.valueTyped || ""}
          onChange={(event) => queryFields.setValueTyped(event.target.value)}
          rightSectionWidth={rem(74)}
          rightSection={
            <Flex>
              <ActionIcon
                size={rem(32)}
                onClick={() => ascending.toggleAscending()}
              >
                {ascending.ascending ? (
                  <IconSortAscendingLetters />
                ) : (
                  <IconSortDescendingLetters />
                )}
              </ActionIcon>
              <ActionIcon
                size={rem(32)}
                radius="xl"
                color={theme.primaryColor}
                variant="filled"
                onClick={() => {
                  setQuery();
                  getSearch();
                }}
              >
                <IconArrowRight size="1.1rem" />
              </ActionIcon>
            </Flex>
          }
          placeholder={
            queryFields.keyChecked === 0 ? "Оберіть критерій" : "Задайте пошук"
          }
        />
      </Container>

      <Container size="xl" my="xl" p={0}>
        {searchData ? (
          <Grid align="stretch" justify="center">
            {searchData.map((item, index) => (
              <Grid.Col
                md={3}
                sm={4}
                span={7}
                key={"book_" + index.toString()}
                h={rem(470)}
              >
                <LibrarySearchItem
                  category={
                    item.CategoryId
                      ? categories.find((c) => c.Id == item.CategoryId)
                          ?.Category || ""
                      : ""
                  }
                  image={`${process.env.BACKEND}/book/${item.Id}_cover.jpg`}
                  author={item.Author ? item.Author : ""}
                  link={`/library/${item.Id}`}
                  title={item.Title ? item.Title : ""}
                />
              </Grid.Col>
            ))}
          </Grid>
        ) : (
          <Text>Не знайдено</Text>
        )}
      </Container>

      <Pagination
        value={page.pageNo}
        onChange={page.setPageNo}
        total={searchPageCount === 1 ? 0 : searchPageCount}
        position="center"
        mt="md"
        defaultValue={1}
      />
    </>
  );
}
