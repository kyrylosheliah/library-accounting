import Head from "next/head";
import {
  Container,
  useMantineTheme,
  rem,
  Text,
  Card,
  Paper,
  createStyles,
  ThemeIcon,
  Button,
  Grid,
  Center,
} from "@mantine/core";
import Image from "next/image";
import { useBookRecord } from "root/hooks/useBookRecord";
import { LabeledField } from "root/components/LabeledField";
import {
  IconAbacus,
  IconChevronLeft,
  IconStar,
  IconStarFilled,
  IconStarsFilled,
} from "@tabler/icons-react";
import { useAuth } from "root/hooks/useAuth";
import { notifications } from "@mantine/notifications";
import Link from "next/link";

const useStyles = createStyles((theme) => ({
  block: {
    width: "100%",
    height: "100%",
    padding: rem(10),
    border: `1px solid ${
      theme.colorScheme === "dark" ? theme.colors.dark[6] : theme.colors.gray[4]
    }`,
  },
  longContent: {
    width: "100%",
    height: "100%",
    overflow: "auto",
  },
}));

const HEIGHT1 = rem(400);

export default function Book() {
  const theme = useMantineTheme();
  const { classes } = useStyles();
  const { user } = useAuth();
  const { isReady, categories, book, quantity, wishes, wish } = useBookRecord();
  const category = isReady
    ? categories.find((c) => c.Id === book.CategoryId)?.Category || ""
    : "";
  const image = isReady ? `/book/${book.Id}_cover.jpg` : "/book/0_cover.svg";

  return (
    <>
      <Head>
        <title>{book.Title || "Порожня сторінка книги"}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container size="lg" my="md">
        <Grid justify="center" align="stretch">
          <Grid.Col span={12}>
            <Center>
              <Link href="/library">
                <Button variant="subtle" pl="xs" pr="lg">
                  <IconChevronLeft />
                  Назад
                </Button>
              </Link>
            </Center>
          </Grid.Col>
          <Grid.Col md={3} sm={6} xs={12}>
            <Center>
              <Card
                className={classes.block}
                pos="relative"
                mih={rem(HEIGHT1)}
                maw={rem(260)}
              >
                <Image
                  color="gray"
                  src={image}
                  alt={""}
                  fill={true}
                  style={{ objectFit: "cover" }}
                />
              </Card>
            </Center>
          </Grid.Col>
          <Grid.Col md={3} sm={6} xs={12}>
            <Paper className={classes.block} mah={rem(HEIGHT1)}>
              <LabeledField label="Назва" value={book.Title} />
              <LabeledField label="Категорія" value={category} />
              <LabeledField label="Автор" value={book.Author} />
              <LabeledField
                label="ISBN"
                description="(універсальний ідентифікаційний номер)"
                value={book.Isbn}
              />
              <LabeledField label="Рік видання" value={book.Year} />
            </Paper>
          </Grid.Col>
          <Grid.Col md={3} sm={6} xs={12}>
            <Paper className={classes.block} mah={rem(HEIGHT1)}>
              <div className={classes.longContent}>
                <LabeledField
                  icon={
                    <ThemeIcon size={rem(36)} variant="default" color="yellow">
                      <IconAbacus />
                    </ThemeIcon>
                  }
                  label="Кількість"
                  value={<Text pl="xs">{quantity}</Text>}
                />
                <LabeledField
                  icon={
                    <ThemeIcon size={rem(36)} variant="light" color="yellow">
                      <IconStarsFilled />
                    </ThemeIcon>
                  }
                  label="У бажаному"
                  value={<Text pl="xs">{wishes}</Text>}
                />
                <LabeledField
                  icon={
                    <ThemeIcon
                      size={rem(36)}
                      variant={wish.isWished ? "light" : "default"}
                      color="yellow"
                    >
                      {wish.isWished ? <IconStarFilled /> : <IconStar />}
                    </ThemeIcon>
                  }
                  label={
                    wish.isWished ? "Бажане вами" : "Ви не додали до бажаного"
                  }
                  value={
                    <Button
                      compact
                      variant="subtle"
                      onClick={() => {
                        if (user) {
                          wish.isWished ? wish.unwish() : wish.wish();
                        } else {
                          notifications.show({
                            color: "red",
                            title: "Ви не авторизовані",
                            message: "Увійдіть до свого облікового запису",
                          });
                        }
                      }}
                    >
                      {wish.isWished ? "Прибрати" : "Додати"}
                    </Button>
                  }
                />
              </div>
            </Paper>
          </Grid.Col>
          <Grid.Col md={3} sm={6} xs={12}>
            <Paper className={classes.block} mah={rem(HEIGHT1)}>
              <div className={classes.longContent}>
                <LabeledField
                  label="Примітка"
                  description="(опис, анотація, нотатка)"
                  value={book.Annotation}
                />
              </div>
            </Paper>
          </Grid.Col>
        </Grid>
      </Container>
    </>
  );
}
